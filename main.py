from PyQt5 import QtCore, QtGui, QtWidgets
from timeit import default_timer as timer
import pyqtgraph as pg
import numpy as np
import sys


# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

####################################################
##  Medžiagų klasės
class Material:
    def __init__(self, id, name, coef):
        self.id = id
        self.name = name
        self.coef = coef


class Materials:
    items = [
        Material(0, "Varis", 0.0000167),
        Material(1, "Auksas", 0.0000142),
        Material(2, "Geležis", 0.000012),
        Material(3, "Aliuminis", 0.000023)

        # Jei norit įdėti medžiagą, į šitą listą įdėkit dar vieną Material() su id (+1), vardu ir alfa koeficientu
    ]

    def getCoef(self, id):
        for item in self.items:
            if (item.id == id):
                return item.coef
        return -1

    def getName(self, id):
        for item in self.items:
            if (item.id == id):
                return item.name
        return -1


####################################################

####################################################
##  Pagrindinė klasė
class Ui_Dialog(object):
    ####################################################
    ## Kintamųjų aprašymas
    length1_initValue = 1000
    length1_minValue = 10
    length1_maxValue = 2000

    length2_initValue = 1100
    length2_minValue = 10
    length2_maxValue = 2000

    temp1_initValue = 30
    temp1_minValue = 0
    temp1_maxValue = 300

    temp2_initValue = 70
    temp2_minValue = 0
    temp2_maxValue = 300

    process_start = 0
    ####################################################

    ####################################################
    ##  Šriftų aprašymas
    labelFont = QtGui.QFont()
    labelFont.setPointSize(12)

    valueFont = QtGui.QFont()
    valueFont.setPointSize(16)

    ####################################################

    ####################################################
    ##  'Go' mygtuko paspaudimo metodas
    def doGo(self):
        ilgis_pr = self.length1Slider.value()
        ilgis_prr = self.length1Slider.value()
        ilgis_ga = self.length2Slider.value()
        temp_pr = self.temp1Slider.value()
        temp_ga = self.temp2Slider.value()
        coef = Materials.getCoef(Materials, self.materialComboBox.currentIndex())
        name = Materials.getName(Materials, self.materialComboBox.currentIndex())
        result = None

        print("----------------------------------------")
        print("Medžiaga             : ", self.materialComboBox.currentText())
        print("Pradinis ilgis  (mm) : ", ilgis_pr)
        if (self.selectAlpha.isChecked()):
            print("Galutinis ilgis (mm) : ", ilgis_ga)
        print("Pradinė temp.   (°C) : ", temp_pr)
        print("Galutinė temp.  (°C) : ", temp_ga)
        self.materialComboBox.setEnabled(False)
        self.length1Slider.setEnabled(False)
        self.length2Slider.setEnabled(False)
        self.length1Value.setEnabled(False)
        self.length2Value.setEnabled(False)
        self.temp1Slider.setEnabled(False)
        self.temp2Slider.setEnabled(False)
        self.temp1Value.setEnabled(False)
        self.temp2Value.setEnabled(False)
        self.pushButton.setEnabled(False)
        self.radioGroup.setEnabled(False)
        # self.process_start = timer()

        self.plotView.clear()
        ilgis_gaa = self.length2Slider.value()
        if (self.selectAlpha.isChecked()):
            # for i in range(3):
            #    self.plotView.plot(x, y[i], pen=(i,3))
            ilgis_pr = ilgis_pr / 1000
            ilgis_ga = ilgis_ga / 1000
            result = (ilgis_ga - ilgis_pr) / (ilgis_pr * (temp_ga - temp_pr))
            self.results.setDecimals(6)
            self.results.setValue(result)
            ilgis_ga = ilgis_ga * 1000
            print("           α (m/m°C) : ", result)
            x = np.linspace(temp_pr, temp_ga, num=abs((temp_ga - temp_pr) * 10))
            # y = np.linspace(ilgis_pr, ilgis_gaa, num=10)
            y = np.linspace(ilgis_prr, ilgis_ga, num=abs((temp_ga - temp_pr) * 10))
            # print(abs(ilgis_ga-ilgis_pr))
            self.plotView.setTitle("Kietojo kūno pailgėjimo priklausomybė nuo temperatūros pokyčio grafikas", color="b",
                                   size="15pt")
            self.plotView.setLabel('left', "<span style=\"color:red;font-size:20px\">L (mm)</span>")
            self.plotView.setLabel('bottom', "<span style=\"color:red;font-size:20px\">Temperatūra, °C</span>")
            self.plotView.showGrid(x=True, y=True)

            self.plotView.setXRange(0, temp_ga)
            # self.plotView.setYRange(ilgis_pr, ilgis_gaa)
            self.plotView.setYRange(ilgis_prr, ilgis_ga)

            self.plotView.plot(x, y, pen=1)
            self.plotView.centralLayout

        else:
            ilgis_pr = ilgis_pr / 1000
            ilgis_ga = ilgis_pr + (ilgis_pr * coef * (temp_ga - temp_pr))
            ilgis_ga = ilgis_ga * 1000
            self.results.setDecimals(3)
            self.results.setValue(ilgis_ga)
            print("              L (mm) : ", ilgis_ga)

            ilgis_ga = ilgis_ga - ilgis_prr

            x = np.linspace(temp_pr, temp_ga, num=abs((temp_ga - temp_pr) * 10))
            # y = np.linspace(ilgis_pr, ilgis_gaa, num=10)
            y = np.linspace(0, ilgis_ga, num=abs((temp_ga - temp_pr) * 10))
            # print(abs(ilgis_ga-ilgis_pr))
            self.plotView.setTitle("Kietojo kūno pailgėjimo priklausomybė nuo temperatūros pokyčio grafikas", color="b",
                                   size="15pt")
            self.plotView.setLabel('left', "<span style=\"color:red;font-size:20px\">L (mm)</span>")
            self.plotView.setLabel('bottom', "<span style=\"color:red;font-size:20px\">Temperatūra, °C</span>")
            self.plotView.showGrid(x=True, y=True)
            self.plotView.addLegend()
            self.plotView.setXRange(0, temp_ga)
            # self.plotView.setYRange(ilgis_pr, ilgis_gaa)
            self.plotView.setYRange(0, ilgis_ga)

            self.plotView.plot(x, y, name=name, pen=1)
            self.plotView.centralLayout

    ####################################################

    ####################################################
    ##  'Reset' mygtuko paspaudimo metodas
    def doReset(self):
        self.length1Slider.setValue(self.length1_initValue)
        self.length2Slider.setValue(self.length2_initValue)
        self.length1Value.setValue(self.length1_initValue)
        self.length2Value.setValue(self.length2_initValue)
        self.temp1Slider.setValue(self.temp1_initValue)
        self.temp2Slider.setValue(self.temp2_initValue)
        self.temp1Value.setValue(self.temp1_initValue)
        self.temp2Value.setValue(self.temp2_initValue)
        self.materialComboBox.setEnabled(True)
        self.length1Slider.setEnabled(True)
        self.length2Slider.setEnabled(True)
        self.length1Value.setEnabled(True)
        self.length2Value.setEnabled(True)
        self.temp1Slider.setEnabled(True)
        self.temp2Slider.setEnabled(True)
        self.temp1Value.setEnabled(True)
        self.temp2Value.setEnabled(True)
        self.pushButton.setEnabled(True)
        self.radioGroup.setEnabled(True)
        self.plotView.clear()

    ####################################################

    ####################################################
    ##  Įvedamų reikšmių pasikeitimo valdymo metodai
    def onLength1SliderChange(self):
        self.length1Value.setValue(self.length1Slider.value())

    def onTemp1SliderChange(self):
        self.temp1Value.setValue(self.temp1Slider.value())

    def onLength2SliderChange(self):
        self.length2Value.setValue(self.length2Slider.value())

    def onTemp2SliderChange(self):
        self.temp2Value.setValue(self.temp2Slider.value())

    def onLength1ValueChange(self):
        self.length1Slider.setValue(self.length1Value.value())

    def onTemp1ValueChange(self):
        self.temp1Slider.setValue(self.temp1Value.value())

    def onLength2ValueChange(self):
        self.length2Slider.setValue(self.length2Value.value())

    def onTemp2ValueChange(self):
        self.temp2Slider.setValue(self.temp2Value.value())

    def onRadioGroupChange(self):
        if (self.selectAlpha.isChecked()):
            self.materialGroup.setEnabled(False)
            self.length2Group.setEnabled(True)
            self.resultsLabel2.setText("α, m/m°C")
        else:
            self.materialGroup.setEnabled(True)
            self.length2Group.setEnabled(False)
            self.resultsLabel2.setText("L, mm")

    ####################################################

    ####################################################
    ##  Grafinės sąsajos aprašymas ir inicializavimas
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1118, 680)

        self.lengthGroup1 = QtWidgets.QGroupBox(Dialog)
        self.lengthGroup1.setGeometry(QtCore.QRect(920, 20, 181, 111))
        self.lengthGroup1.setTitle("")
        self.lengthGroup1.setObjectName("lengthGroup1")

        self.length1Slider = QtWidgets.QSlider(self.lengthGroup1)
        self.length1Slider.setGeometry(QtCore.QRect(10, 40, 160, 21))
        self.length1Slider.setOrientation(QtCore.Qt.Horizontal)
        self.length1Slider.setObjectName("length1Slider")
        self.length1Slider.setMinimum(self.length1_minValue)
        self.length1Slider.setMaximum(self.length1_maxValue)
        self.length1Slider.setValue(self.length1_initValue)
        self.length1Slider.valueChanged.connect(self.onLength1SliderChange)
        self.length1Slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.length1Slider.setTickInterval(100)

        self.length1Label = QtWidgets.QLabel(self.lengthGroup1)
        self.length1Label.setGeometry(QtCore.QRect(10, 10, 161, 21))
        self.length1Label.setFont(self.labelFont)
        self.length1Label.setObjectName("length1Label")

        self.length1Value = QtWidgets.QSpinBox(self.lengthGroup1)
        self.length1Value.setGeometry(QtCore.QRect(10, 70, 161, 31))
        self.length1Value.setObjectName("length1Value")
        self.length1Value.setMinimum(self.length1_minValue)
        self.length1Value.setMaximum(self.length1_maxValue)
        self.length1Value.setValue(self.length1_initValue)
        self.length1Value.valueChanged.connect(self.onLength1ValueChange)
        self.length1Value.setFont(self.valueFont)

        self.temp1Group = QtWidgets.QGroupBox(Dialog)
        self.temp1Group.setGeometry(QtCore.QRect(920, 240, 181, 111))
        self.temp1Group.setTitle("")
        self.temp1Group.setObjectName("temp1Group")

        self.temp1Slider = QtWidgets.QSlider(self.temp1Group)
        self.temp1Slider.setGeometry(QtCore.QRect(10, 40, 160, 21))
        self.temp1Slider.setOrientation(QtCore.Qt.Horizontal)
        self.temp1Slider.setObjectName("temp1Slider")
        self.temp1Slider.setMinimum(self.temp1_minValue)
        self.temp1Slider.setMaximum(self.temp1_maxValue)
        self.temp1Slider.setValue(self.temp1_initValue)
        self.temp1Slider.valueChanged.connect(self.onTemp1SliderChange)
        self.temp1Slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.temp1Slider.setTickInterval(10)

        self.temp1Label = QtWidgets.QLabel(self.temp1Group)
        self.temp1Label.setGeometry(QtCore.QRect(10, 10, 161, 21))
        self.temp1Label.setFont(self.labelFont)
        self.temp1Label.setObjectName("temp1Label")

        self.temp1Value = QtWidgets.QSpinBox(self.temp1Group)
        self.temp1Value.setGeometry(QtCore.QRect(10, 70, 161, 31))
        self.temp1Value.setObjectName("temp1Value")
        self.temp1Value.setMinimum(self.temp1_minValue)
        self.temp1Value.setMaximum(self.temp1_maxValue)
        self.temp1Value.setValue(self.temp1_initValue)
        self.temp1Value.valueChanged.connect(self.onTemp1ValueChange)
        self.temp1Value.setFont(self.valueFont)

        self.materialGroup = QtWidgets.QGroupBox(Dialog)
        self.materialGroup.setGeometry(QtCore.QRect(920, 460, 181, 71))
        self.materialGroup.setTitle("")
        self.materialGroup.setObjectName("materialGroup")
        self.materialGroup.setEnabled(False)

        self.materialComboBox = QtWidgets.QComboBox(self.materialGroup)
        self.materialComboBox.setGeometry(QtCore.QRect(10, 40, 161, 22))
        self.materialComboBox.setFont(self.labelFont)
        self.materialComboBox.setObjectName("materialComboBox")
        for x in range(len(Materials.items)):
            self.materialComboBox.addItem("")

        self.materialLabel = QtWidgets.QLabel(self.materialGroup)
        self.materialLabel.setGeometry(QtCore.QRect(10, 10, 101, 21))
        self.materialLabel.setFont(self.labelFont)
        self.materialLabel.setObjectName("materialLabel")

        self.plotView = pg.PlotWidget(Dialog)
        self.plotView.setXRange(0, 300)
        self.plotView.setYRange(1000, 2000)
        self.plotView.setGeometry(QtCore.QRect(10, 20, 891, 500))
        self.plotView.setObjectName("plotView")
        self.plotView.showButtons()
        self.plotView.setBackground('w')
        # self.graphicsView = QtWidgets.QGraphicsView(Dialog)
        # self.graphicsView.setGeometry(QtCore.QRect(10, 650, 891, 231))
        # self.graphicsView.setObjectName("graphicsView")

        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(920, 590, 81, 41))
        self.pushButton.setFont(self.labelFont)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.doGo)

        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(1020, 590, 81, 41))
        self.pushButton_2.setFont(self.labelFont)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.doReset)

        self.temp2Group = QtWidgets.QGroupBox(Dialog)
        self.temp2Group.setGeometry(QtCore.QRect(920, 350, 181, 111))
        self.temp2Group.setTitle("")
        self.temp2Group.setObjectName("temp2Group")

        self.temp2Slider = QtWidgets.QSlider(self.temp2Group)
        self.temp2Slider.setGeometry(QtCore.QRect(10, 40, 160, 21))
        self.temp2Slider.setOrientation(QtCore.Qt.Horizontal)
        self.temp2Slider.setObjectName("temp2Slider")
        self.temp2Slider.setMinimum(self.temp2_minValue)
        self.temp2Slider.setMaximum(self.temp2_maxValue)
        self.temp2Slider.setValue(self.temp2_initValue)
        self.temp2Slider.valueChanged.connect(self.onTemp2SliderChange)
        self.temp2Slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.temp2Slider.setTickInterval(10)

        self.temp2Label = QtWidgets.QLabel(self.temp2Group)
        self.temp2Label.setGeometry(QtCore.QRect(10, 10, 161, 21))
        self.temp2Label.setFont(self.labelFont)
        self.temp2Label.setObjectName("temp2Label")

        self.temp2Value = QtWidgets.QSpinBox(self.temp2Group)
        self.temp2Value.setGeometry(QtCore.QRect(10, 70, 161, 31))
        self.temp2Value.setObjectName("temp2Value")
        self.temp2Value.setMinimum(self.temp2_minValue)
        self.temp2Value.setMaximum(self.temp2_maxValue)
        self.temp2Value.setValue(self.temp2_initValue)
        self.temp2Value.valueChanged.connect(self.onTemp2ValueChange)
        self.temp2Value.setFont(self.valueFont)

        self.length2Group = QtWidgets.QGroupBox(Dialog)
        self.length2Group.setGeometry(QtCore.QRect(920, 130, 181, 111))
        self.length2Group.setTitle("")
        self.length2Group.setObjectName("length2Group")

        self.length2Slider = QtWidgets.QSlider(self.length2Group)
        self.length2Slider.setGeometry(QtCore.QRect(10, 40, 160, 21))
        self.length2Slider.setOrientation(QtCore.Qt.Horizontal)
        self.length2Slider.setObjectName("length2Slider")
        self.length2Slider.setMinimum(self.length2_minValue)
        self.length2Slider.setMaximum(self.length2_maxValue)
        self.length2Slider.setValue(self.length2_initValue)
        self.length2Slider.valueChanged.connect(self.onLength2SliderChange)
        self.length2Slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.length2Slider.setTickInterval(100)

        self.length2Label = QtWidgets.QLabel(self.length2Group)
        self.length2Label.setGeometry(QtCore.QRect(10, 10, 161, 21))
        self.length2Label.setFont(self.labelFont)
        self.length2Label.setObjectName("length2Label")

        self.length2Value = QtWidgets.QSpinBox(self.length2Group)
        self.length2Value.setGeometry(QtCore.QRect(10, 70, 161, 31))
        self.length2Value.setObjectName("length2Value")
        self.length2Value.setMinimum(self.length2_minValue)
        self.length2Value.setMaximum(self.length2_maxValue)
        self.length2Value.setValue(self.length2_initValue)
        self.length2Value.valueChanged.connect(self.onLength2ValueChange)
        self.length2Value.setFont(self.valueFont)

        self.radioGroup = QtWidgets.QGroupBox(Dialog)
        self.radioGroup.setGeometry(QtCore.QRect(920, 530, 181, 51))
        self.radioGroup.setTitle("")
        self.radioGroup.setObjectName("radioGroup")

        self.alphaLabel = QtWidgets.QLabel(self.radioGroup)
        self.alphaLabel.setGeometry(QtCore.QRect(35, 0, 161, 21))
        self.alphaLabel.setFont(self.labelFont)
        self.alphaLabel.setObjectName("alphaLabel")

        self.selectAlpha = QtWidgets.QRadioButton(self.radioGroup)
        self.selectAlpha.setGeometry(QtCore.QRect(43, 25, 161, 21))
        self.selectAlpha.setChecked(True)
        self.selectAlpha.clicked.connect(self.onRadioGroupChange)

        self.selectLengthLabel = QtWidgets.QLabel(self.radioGroup)
        self.selectLengthLabel.setGeometry(QtCore.QRect(117, 0, 161, 21))
        self.selectLengthLabel.setFont(self.labelFont)
        self.selectLengthLabel.setObjectName("selectLengthLabel")

        self.selectLength = QtWidgets.QRadioButton(self.radioGroup)
        self.selectLength.setGeometry(QtCore.QRect(127, 25, 161, 21))
        self.selectLength.clicked.connect(self.onRadioGroupChange)

        self.resultsGroup = QtWidgets.QGroupBox(Dialog)
        self.resultsGroup.setGeometry(QtCore.QRect(30, 550, 181, 231))
        self.resultsGroup.setTitle("")
        self.resultsGroup.setObjectName("resultsGroup")

        self.resultsLabel1 = QtWidgets.QLabel(self.resultsGroup)
        self.resultsLabel1.setGeometry(QtCore.QRect(10, 10, 161, 21))
        self.resultsLabel1.setFont(self.labelFont)
        self.resultsLabel1.setObjectName("resultsLabel1")

        self.resultsLabel2 = QtWidgets.QLabel(self.resultsGroup)
        self.resultsLabel2.setGeometry(QtCore.QRect(10, 45, 161, 21))
        self.resultsLabel2.setFont(self.labelFont)
        self.resultsLabel2.setObjectName("resultsLabel2")

        self.results = QtWidgets.QDoubleSpinBox(self.resultsGroup)
        self.results.setGeometry(QtCore.QRect(10, 70, 161, 31))
        self.results.setMinimum(sys.float_info.min)
        self.results.setMaximum(sys.float_info.max)
        self.results.setFont(self.valueFont)
        self.results.setReadOnly(True)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    ####################################################

    ####################################################
    ##  Grafinės sąsajos elementų antraščių ir reikšmių aprašymai
    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Kietojo kūno temperatūrinio ilgėjimo koeficiento nustatymas"))
        self.length1Label.setText(_translate("Dialog", "Pradinis ilgis, mm"))
        self.temp1Label.setText(_translate("Dialog", "Pradinė temp., °C"))
        self.materialLabel.setText(_translate("Dialog", "Medžiaga"))
        self.pushButton.setText(_translate("Dialog", "Go"))
        self.pushButton_2.setText(_translate("Dialog", "Reset"))
        self.temp2Label.setText(_translate("Dialog", "Galutinė temp., °C"))
        self.length2Label.setText(_translate("Dialog", "Galutinis ilgis, mm"))
        self.alphaLabel.setText(_translate("Dialog", "α, m/m°C"))
        self.selectLengthLabel.setText(_translate("Dialog", "L, mm"))
        self.resultsLabel1.setText(_translate("Dialog", "Rezultatai"))
        self.resultsLabel2.setText(_translate("Dialog", "α, m/m°C"))

        for material in Materials.items:
            self.materialComboBox.setItemText(material.id, _translate("Dialog", material.name))
    ####################################################


####################################################


####################################################
##  Programos paleidimas
def main():
    app = QtWidgets.QApplication(sys.argv)
    window = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(window)

    window.show()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
####################################################